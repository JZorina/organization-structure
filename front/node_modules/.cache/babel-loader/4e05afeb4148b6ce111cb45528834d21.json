{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\organization-structure\\\\front\\\\src\\\\components\\\\TaskPopUp.js\";\nimport React from 'react';\nimport Popup from \"reactjs-popup\";\nimport './ReportPopUp.css';\nimport ServerData from '../api/ServerData';\n\nclass TaskPopUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.SaveTask = () => {\n      ServerData.post('/SaveTask', {\n        task: this.state.task,\n        assignDate: this.state.assignDate,\n        dueDate: this.state.dueDate,\n        empId: this.props.emp.id\n      }).then(response => {\n        alert(response.data.message);\n      });\n      this.setState({\n        task: ''\n      });\n      this.setState({\n        dueDate: ''\n      });\n    };\n\n    this.GetCurrentDate = () => {\n      var tempDate = new Date();\n      var date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate();\n      this.setState({\n        assignDate: date\n      });\n    };\n\n    this.state = {\n      task: '',\n      assignDate: '',\n      dueDate: ''\n    };\n  }\n\n  componentDidMount() {\n    this.GetCurrentDate();\n  }\n\n  render() {\n    console.log(this);\n    const name = this.props.emp.name;\n    return React.createElement(Popup, {\n      trigger: React.createElement(\"button\", {\n        className: \"mini ui violet button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Assign Task\"),\n      modal: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, close => React.createElement(\"div\", {\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"close\",\n      onClick: close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" Assign task to \", name, \" \"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui fluid icon input focus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"type here\",\n      value: this.state.task,\n      onChange: e => this.setState({\n        task: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"ui fluid icon input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      value: this.state.dueDate,\n      onChange: e => this.setState({\n        dueDate: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"ui two bottom attached buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui button\",\n      onClick: this.SaveTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"div\", {\n      className: \"ui primary button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default TaskPopUp;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\react\\organization-structure\\front\\src\\components\\TaskPopUp.js"],"names":["React","Popup","ServerData","TaskPopUp","Component","constructor","props","SaveTask","post","task","state","assignDate","dueDate","empId","emp","id","then","response","alert","data","message","setState","GetCurrentDate","tempDate","Date","date","getFullYear","getMonth","getDate","componentDidMount","render","console","log","name","close","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Popup from \"reactjs-popup\";\r\nimport './ReportPopUp.css';\r\nimport ServerData from '../api/ServerData';\r\nclass TaskPopUp extends React.Component{    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            task:'',\r\n            assignDate:'',\r\n            dueDate:'',\r\n        } \r\n    }\r\n    componentDidMount(){\r\n        this.GetCurrentDate();\r\n    }\r\n\r\n    SaveTask=()=>{\r\n        ServerData.post('/SaveTask',{\r\n            task:this.state.task,\r\n            assignDate:this.state.assignDate,\r\n            dueDate:this.state.dueDate,\r\n            empId:this.props.emp.id\r\n\r\n        }).then((response)=>{\r\n            alert(response.data.message);\r\n        })\r\n       this.setState({task:''});\r\n       this.setState({dueDate:''});\r\n    }\r\n    GetCurrentDate=()=> {\r\n        var tempDate = new Date();\r\n        var date = tempDate.getFullYear() + '-' + (tempDate.getMonth()+1) + '-' + tempDate.getDate();\r\n        this.setState({assignDate:date});\r\n      }\r\n  render (){\r\n    console.log(this);\r\n    const {name}=this.props.emp;\r\n    return(\r\n        <Popup trigger={<button className=\"mini ui violet button\">Assign Task</button>} modal>\r\n            {close => (\r\n                <div className=\"modal\">\r\n                    <button className=\"close\" onClick={close}>\r\n                        &times;\r\n                    </button>\r\n                    <div className=\"header\"> Assign task to {name} </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"ui fluid icon input focus\">\r\n                            <input type=\"text\" placeholder=\"type here\"\r\n                            value={this.state.task}\r\n                            onChange={ e => this.setState({task: e.target.value}) }></input>\r\n                        </div>\r\n                        <div className=\"ui fluid icon input\">\r\n                            <input type=\"date\" \r\n                             value={this.state.dueDate}\r\n                             onChange={ e => this.setState({dueDate: e.target.value}) }></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ui two bottom attached buttons\">\r\n                        <div className=\"ui button\"\r\n                        onClick={this.SaveTask}>\r\n                            Save\r\n                        </div>\r\n                        <div className=\"ui primary button\">\r\n                            Cancel\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n                )}\r\n            </Popup>\r\n        );\r\n    }\r\n}\r\nexport default TaskPopUp;"]},"metadata":{},"sourceType":"module"}